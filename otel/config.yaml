receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
  resourcedetection:
    detectors: ["env", "docker", "system"]
    override: false
  transform/drop_unneeded_resource_attributes:
    error_mode: ignore
    metric_statements: # Upewnij się, że ta sekcja jest odpowiednia dla Twoich metryk
      - context: resource
        statements:
          - delete_key(attributes, "k8s.pod.start_time")
          - delete_key(attributes, "os.description")
          - delete_key(attributes, "os.type")
          - delete_key(attributes, "process.command_args")
          - delete_key(attributes, "process.executable.path")
          - delete_key(attributes, "process.pid")
          - delete_key(attributes, "process.runtime.description")
          - delete_key(attributes, "process.runtime.name")
          - delete_key(attributes, "process.runtime.version")
  transform/add_resource_attributes_as_metric_attributes:
    error_mode: ignore
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["deployment.environment"], resource.attributes["deployment.environment"])
          - set(attributes["service.version"], resource.attributes["service.version"])

exporters:
  # Eksporter dla lokalnego Prometheus
  prometheusremotewrite/local_prometheus:
    endpoint: http://host.docker.internal:9090/api/v1/write

service:
  # extensions: [] # Dodaj 'basicauth/local_prometheus_auth' jeśli używasz autoryzacji
  pipelines:
    metrics:
      receivers: [otlp]
      processors:
        [
          resourcedetection,
          transform/drop_unneeded_resource_attributes, # Dodaj, jeśli te procesory są nadal używane
          transform/add_resource_attributes_as_metric_attributes, # Dodaj, jeśli te procesory są nadal używane
          batch,
        ]
      exporters: [prometheusremotewrite/local_prometheus]