apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: my-otel-collector
  namespace: default
spec:
  mode: deployment
  replicas: 1
  serviceAccount: default
  image: otel/opentelemetry-collector-contrib:0.101.0
  config: 
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"
          http:
            endpoint: "0.0.0.0:4318"

    processors:
      batch: {}
      transform/drop_unneeded_resource_attributes:
        error_mode: ignore
        metric_statements:
          - context: resource
            statements:
              - delete_key(attributes, "k8s.pod.start_time")
              - delete_key(attributes, "os.description")
              - delete_key(attributes, "os.type")
              - delete_key(attributes, "process.command_args")
              - delete_key(attributes, "process.executable.path")
              - delete_key(attributes, "process.pid")
              - delete_key(attributes, "process.runtime.description")
              - delete_key(attributes, "process.runtime.name")
              - delete_key(attributes, "process.runtime.version")
      transform/add_resource_attributes_as_metric_attributes:
        error_mode: ignore
        metric_statements:
          - context: datapoint
            statements:
              - set(attributes["deployment.environment"], resource.attributes["deployment.environment"])
              - set(attributes["service.version"], resource.attributes["service.version"])

    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
        namespace: "otel"
      logging: 
        loglevel: debug

    service:
     exporters:
      prometheus:
        endpoint: "0.0.0.0:8889" 
        namespace: "otel"
      logging:
        loglevel: debug

    service:
      telemetry:
        metrics:
          address: "0.0.0.0:8890"
                                 
        logs:
          level: "info"
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus, logging]

  ports:
    - name: otlp-grpc
      port: 431
      targetPort: 4317
      protocol: TCP
      appProtocol: grpc
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
      appProtocol: http
    - name: prometheus
      port: 8889
      targetPort: 8889
      protocol: TCP